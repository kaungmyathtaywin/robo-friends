{"version":3,"sources":["constants.js","reducers.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","actions.js","reportWebVitals.js","index.js"],"names":["CHANGE_SEARCHFIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","initialStateSearch","searchfield","initialStateRobots","isPending","robots","error","Card","id","name","email","className","src","alt","CardList","Fragment","map","robot","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","children","ErrorBoundry","state","hasError","this","setState","React","Component","App","onRequestRobots","onSearchChange","filteredRobots","filter","toLowerCase","includes","connect","searchRobots","requestRobots","isPendinng","dispatch","event","text","target","value","payload","fetch","then","response","json","data","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","logger","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.281fcdfe.chunk.js","sourcesContent":["export const CHANGE_SEARCHFIELD = \"CHANGE_SEARCHFIELD\";\nexport const REQUEST_ROBOTS_PENDING = \"REQUEST_ROBOTS_PENDING\";\nexport const REQUEST_ROBOTS_SUCCESS = \"REQUEST_ROBOTS_SUCCESS\";\nexport const REQUEST_ROBOTS_FAILED = \"REQUEST_ROBOTS_FAILED\";\n","import {\n  CHANGE_SEARCHFIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from \"./constants.js\";\n\nconst initialStateSearch = {\n  searchfield: \"\",\n};\n\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return { ...state, searchfield: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: \"\",\n};\n\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return { ...state, isPending: true };\n    case REQUEST_ROBOTS_SUCCESS:\n      return { ...state, robots: action.payload, isPending: false };\n    case REQUEST_ROBOTS_FAILED:\n      return { ...state, error: action.payload, isPending: false };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\n\nfunction Card({ id, name, email }) {\n  return (\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img src={`https://robohash.org/${id}?size=200x200`} alt=\"robots\"></img>\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nfunction CardList({ robots }) {\n  return (\n    <React.Fragment>\n      {robots.map((robot) => {\n        return (\n          <Card\n            key={robot.id}\n            id={robot.id}\n            name={robot.name}\n            email={robot.email}\n          />\n        );\n      })}\n    </React.Fragment>\n  );\n}\n\nexport default CardList;\n","import React from \"react\";\n\nfunction SearchBox({ searchChange }) {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;\n","import React from \"react\";\nimport \"./Scroll.css\";\n\nfunction Scroll(props) {\n  return (\n    <div className=\"flex-container\">\n      <div className=\"wrapper\">{props.children}</div>\n    </div>\n  );\n}\n\nexport default Scroll;\n","import React from \"react\";\n\nclass ErrorBoundry extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oh, This is not good!</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundry;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setSearchfield, requestRobots } from \"../actions\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport \"./App.css\";\n\nconst mapStateToProps = (state) => {\n  return {\n    searchfield: state.searchRobots.searchfield,\n    robots: state.requestRobots.robots,\n    isPendinng: state.requestRobots.isPendinng,\n    error: state.requestRobots.error,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => {\n      dispatch(setSearchfield(event.target.value));\n    },\n    onRequestRobots: () => {\n      dispatch(requestRobots());\n    },\n  };\n};\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    const { searchfield, robots, isPending, onSearchChange } = this.props;\n    const filteredRobots = robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n\n    if (isPending) {\n      return <h1 className=\"tc\">Loading</h1>;\n    } else {\n      return (\n        <div className=\"tc\">\n          <h1 className=\"f2s\">RoboFriends</h1>\n          <SearchBox searchChange={onSearchChange} />\n          <Scroll>\n            <ErrorBoundry>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundry>\n          </Scroll>\n        </div>\n      );\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  CHANGE_SEARCHFIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from \"./constants.js\";\n\nexport const setSearchfield = (text) => {\n  return {\n    type: CHANGE_SEARCHFIELD,\n    payload: text,\n  };\n};\n\nexport const requestRobots = () => (dispatch) => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then((response) => response.json())\n    .then((data) => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n    .catch((error) => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }));\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { searchRobots, requestRobots } from \"./reducers\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\nimport \"tachyons\";\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}